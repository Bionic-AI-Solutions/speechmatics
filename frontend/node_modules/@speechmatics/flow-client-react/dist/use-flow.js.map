{"version":3,"file":"use-flow.js","sources":["../src/use-flow.ts"],"sourcesContent":["import type { StartConversationMessage } from '@speechmatics/flow-client';\nimport { useCallback, useContext, useMemo } from 'react';\nimport { FlowContext } from './flow-context';\n\nexport function useFlow() {\n  const context = useContext(FlowContext);\n\n  if (context === null) {\n    throw new Error('Flow client uninitialized in context');\n  }\n\n  const { client, sessionId, socketState } = context;\n\n  const startConversation = useCallback(\n    (\n      jwt: string,\n      {\n        config,\n        audioFormat,\n      }: {\n        config: StartConversationMessage['conversation_config'];\n        audioFormat?: StartConversationMessage['audio_format'];\n      },\n    ) => client.startConversation(jwt, { config, audioFormat }),\n    [client],\n  );\n\n  const endConversation = useCallback(() => client.endConversation(), [client]);\n\n  const sendAudio = useCallback(\n    (pcm16Data: ArrayBufferLike) => client.sendAudio(pcm16Data),\n    [client],\n  );\n\n  return useMemo(\n    () => ({\n      startConversation,\n      endConversation,\n      sendAudio,\n      socketState,\n      sessionId,\n    }),\n    [startConversation, endConversation, sendAudio, socketState, sessionId],\n  );\n}\n"],"names":[],"mappings":";;;;AAIO;AACL;AAEA;AACE;AAAsD;AAGxD;AAEA;AAA0B;AAGtB;AACE;AACA;AAKsD;AACnD;AAGT;AAEA;AAAkB;AAC0C;AACnD;AAGT;AAAO;AACE;AACL;AACA;AACA;AACA;AACA;AACF;AACsE;AAE1E;;"}